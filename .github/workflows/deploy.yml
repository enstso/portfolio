name: Build & Deploy

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Create .env file
      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERPASSWORD }}" | docker login -u "${{ secrets.DOCKERUSERNAME }}" --password-stdin

      - name: Build Docker images
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t ${{ secrets.DOCKERUSERNAME }}/portfolio:${IMAGE_TAG} ./
          docker tag ${{ secrets.DOCKERUSERNAME }}/portfolio:${IMAGE_TAG} ${{ secrets.DOCKERUSERNAME }}/portfolio:latest

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERUSERNAME }}/portfolio:${{ github.sha }}
          docker push ${{ secrets.DOCKERUSERNAME }}/portfolio:latest

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          printf "%s\n" "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts

      - name: Run remote deployment script
        run: |
          ssh -i ~/.ssh/id_ed25519 cipher@"$REMOTE_HOST" "bash '/home/cipher/personal/portfolio/k8s/rePullImage.sh'"